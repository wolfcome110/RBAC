@model IEnumerable<Model.Sys_Roles>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmins.cshtml";
}
<script src="~/Scripts/jquery-easyui-1.3.6/treegrid-dnd/enableDnd.js"></script>
<script src="~/Scripts/jquery.linq.min.js"></script>

<div data-options="region:'center',title:''" style="padding:0px;background:#eee;">
    <table id="tgRoles"></table>
</div>
<div id="dlgRoleNavBtns" style="padding:5px">
</div>

<!-- 工具栏 -->
<div id="toolbar" style="height:28px;">
    @Html.Raw(ViewBag.UserAuthority)
</div>

<script>
    var insertedRows = new Array();
    var updatedRows = new Array();
    var deletedRows = new Array();
    var tgRoles = $("#tgRoles");
    var buttons = [];

    var dlgRoleNavBtns = $("#dlgRoleNavBtns");

    //加载操作权限
    (function () {
        $.ajax({
            url: "/Sys_Buttons/index",
            type: "post",
            //data: data,
            success: function (data, textStatus, jqXHR) {

                //{ field: 'itemid', title: 'Item ID', width: 80 },
                for (var i in data.rows) {
                    buttons.push({
                        field: data.rows[i].ButtonTag,
                        title: data.rows[i].ButtonText,
                        align: "center",
                        formatter: function (value, row, index) {
                            if (value == "√") {
                                return '<font color=\"#39CB00\"><b>' + value + '</b></font>';
                            }
                            else {
                                return value;
                            }
                        },
                        editor: {
                            type: "checkbox", options: {
                                on: "√",
                                off: "x"
                            }
                        },
                    });
                }

            },
        });
    })();

    tgRoles.treegrid({
        title: '角色管理',
        url: 'index',
        idField: 'Id',
        treeField: 'RoleName',
        rownumbers: true, //是否加行号
        iconCls: 'icon-save',
        border: 0,
        dataType: "json",
        fitColumns: true,
        singleSelect: false,
        columns: [[
            //{ field: "chk", checkbox: true },
            { field: 'Id', title: 'Id', width: 70 },
            { field: 'RoleName', title: 'RoleName', width: 120, editor: { type: 'text' } },
            { field: 'ParentId', title: 'ParentId', width: 120, hidden: true },
            {
                field: 'IsDefault', title: 'IsDefault', editor: {
                    type: 'checkbox', options: {
                        on: true,
                        off: false
                    }
                }
            },
            { field: 'Remark', title: 'Remark', width: 120, editor: { type: 'text' } },
            {
                field: 'AddTime', title: 'AddTime', width: 120, formatter: function (value, row, index) {
                    if (value == null) return;
                    var date = value.substr(1, value.length - 2);
                    date = value.substr(1, value.length - 2);
                    date = eval('(new ' + date + ');');
                    return date.format("yyyy-MM-dd HH:mm:ss");
                }
            },
            { field: 'SortNum', title: 'SortNum', width: 70, editor: { type: 'numberbox', options: { value: 0 } } },

        ]],
        onLoadSuccess: function (row) {
            //$(this).treegrid('enableDnd', row ? row.id : null);
            enableDnd($(this));
        },
        onBeforeEdit: function (row) {
            $(this).treegrid('disableDnd');
        },
        onAfterEdit: function (row) {
            $(this).treegrid('enableDnd');
        },
        onCancelEdit: function (row) {
            $(this).treegrid('enableDnd');
        },
        onDblClickRow: function (row) {
            $(this).treegrid("select", row.Id);
        },
        toolbar: "#toolbar"
    });




    //ecs按键退出修改
    $(window).keydown(function (event) {
        //console.log(event.keyCode);
        switch (event.keyCode) {
            case 27:
                $('#dg').datagrid('rejectChanges');
        }
    });

    var toolbar = {
        add: function ($dg) {
            //if (editIndex != undefined) return;
            //var date = new Date().format("yyyyMMddHHmmssll");

            var date = new Date();
            var newId = "ID" + date.format("yyyyMMddHHmmssll");
            var rows = $dg.treegrid("getSelections");
            if (rows.length == 0) {
                $dg.treegrid('append', { parent: 0, data: [{ Id: newId, GroupName: "NewGroupName", SortNum: 0 }] }).treegrid("beginEdit", newId);
            }
            else {
                for (var i in rows) {
                    newId = "ID" + Math.floor(Math.random() * 1000);
                    $dg.treegrid('append', { parent: rows[i].Id, data: [{ Id: newId, GroupName: "NewGroupName", SortNum: 0, ParentId: rows[i].Id }] }).treegrid("beginEdit", newId);
                }
            }
        },//Remark
        edit: function ($dg) {
            var rows = $dg.treegrid("getSelections");
            for (var i in rows) {
                $dg.treegrid("beginEdit", rows[i].Id);
            }
        },//
        delete: function ($dg) {
            //console.log($("#dg").datagrid("getSelections"));
            var rows = $dg.treegrid("getSelections");
            var ids = new Array();
            for (var i in rows) {
                ids.push(rows[i].Id);
            }
            for (var i in ids) {
                deletedRows.push($dg.treegrid("pop", ids[i]));

            }
        },//
        restore: function ($dg) {
            $dg.treegrid('rejectChanges');
        },//
        save: function ($dg) {
            //var ed = $('#dg').datagrid('getEditor', { index: editIndex, field: 'Name' });

            for (var i in $dg.treegrid('getSelections')) {
                var obj = $dg.treegrid('getSelections')[i];
                $dg.treegrid('endEdit', obj.Id);
            }

            var rows = $dg.treegrid('getChanges');
            var ids = new Array();
            for (var i in deletedRows) {
                ids.push(deletedRows[i].Id);
            }
            var data = new Object();
            var reg = new RegExp("^ID[0-9]*$");
            for (var i in rows) {
                if (reg.test(rows[i].Id)) {
                    //添加
                    rows[i].Id = 0;
                    insertedRows.push(rows[i]);
                }
                else {
                    //取修改的数据
                    console.log("inArray", $.inArray(rows[i].Id, ids), ids);
                    if (ids.length == 0 || $.inArray(rows[i].Id, ids) == -1) {
                        updatedRows.push(rows[i]);
                    }
                }
            }

            if (insertedRows.length) {
                data["insertedRows"] = JSON.stringify(insertedRows);
            }

            if (updatedRows.length) {
                data["updatedRows"] = JSON.stringify(updatedRows);
            }

            if (deletedRows.length) {
                data["deletedRows"] = JSON.stringify(deletedRows);
            }

            $dg.treegrid('acceptChanges');//此句是提交表单，如果不提交，getChanges方法会返回所有未提交的数据
            $dg.treegrid("unselectAll");

            console.log(data);

            if (rows.length > 0) {
                //更新数据库
                $.ajax({
                    url: "BacthSave",
                    type: "post",
                    data: data,
                    success: function (data, textStatus, jqXHR) {
                        console.log(data);
                        if (data.success) { }
                        $.messager.alert('提示', data.Message, 'info');

                        if (data.success) {
                            $dg.treegrid("reload");
                            insertedRows = [];
                            updatedRows = [];
                            deletedRows = [];

                        }
                    },
                    error: function (jqXHR, textStatus, errorMsg) {
                        // jqXHR 是经过jQuery封装的XMLHttpRequest对象
                        // textStatus 可能为： null、"timeout"、"error"、"abort"或"parsererror"
                        // errorMsg 可能为： "Not Found"、"Internal Server Error"等
                        alert("请求失败：" + errorMsg);
                        insertedRows = [];
                        updatedRows = [];
                        deletedRows = [];
                    }
                });
            }
        },//
        authority: function ($dg) {
            var rows = $dg.treegrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert('提示', '请选择需要配置的角色！', 'info');
                return;
            }


            var dlgRoleNavBtnsOptions = {
                title: "分配权限",
                iconCls: 'icon-cog',
                width: 900,
                height: 550,
                modal: true,
                buttons: [{
                    iconCls: 'icon-ok',
                    text: 'Ok',
                    handler: function () {
                        var tgNavigations = $("#tgNavigations", top.window.document);
                        var navigations = tgNavigations.treegrid('getSelections');

                        for (var i in navigations) {
                            var obj = navigations[i];
                            tgNavigations.treegrid('endEdit', obj.Id);
                        }
                        var rows = tgNavigations.treegrid("getChanges");
                        console.log(rows);
                        var data = new Object();
                        data["Roles"] = JSON.stringify($dg.treegrid("getSelections"));
                        data["Navigations"] = JSON.stringify(rows);
                        console.log(data);
                        //return;
                        //更新数据库
                        $.ajax({
                            url: "/Sys_RoleNavBtns/RoleNavBtns",
                            type: "post",
                            data: data,
                            success: function (data, textStatus, jqXHR) {

                                //top.$.messager.alert('提示', data.Message, 'info');


                                if (data.success) {

                                    tgNavigations.datagrid('acceptChanges');//此句是提交表单，如果不提交，getChanges方法会返回所有未提交的数据
                                    tgNavigations.datagrid("unselectAll");

                                    insertedRows = [];
                                    updatedRows = [];
                                    deletedRows = [];

                                    top.$.messager.confirm('提示', data.Message + "<br/>确认要关闭分配权限窗口吗？", function (r) {
                                        if (r) {
                                            top.$("#dlgRoleNavBtns").dialog("close");
                                        }
                                    });
                                }
                            },
                            error: function (jqXHR, textStatus, errorMsg) {
                                // jqXHR 是经过jQuery封装的XMLHttpRequest对象
                                // textStatus 可能为： null、"timeout"、"error"、"abort"或"parsererror"
                                // errorMsg 可能为： "Not Found"、"Internal Server Error"等
                                alert("请求失败：" + errorMsg);
                                insertedRows = [];
                                updatedRows = [];
                                deletedRows = [];
                            }
                        });
                        //dlgRoleNavBtns.dialog("close");
                    }
                }, {
                    iconCls: 'icon-cancel',
                    text: 'Cancel',
                    handler: function () {
                        top.$("#dlgRoleNavBtns").dialog("close");
                    }
                }],
            };
            top.myWindow($("#dlgRoleNavBtns").clone(true), dlgRoleNavBtnsOptions, function () {
                var options = {
                    //title: 'Sys_Navigations',
                    url: '/Sys_NavButtons/NavBtns',
                    queryParams: {
                        RoldId: rows[0].Id,
                    },
                    idField: 'Id',
                    treeField: 'NavTitle',
                    rownumbers: true, //是否加行号
                    iconCls: 'icon-save',
                    dataType: "json",
                    width: 1000,
                    height: 500,
                    fitColumns: true,
                    fit: true,
                    singleSelect: false,
                    frozenColumns: [[
                        //{ field: "chk", checkbox: true },
                        { field: 'Id', title: 'Id', width: 70 },
                        { field: 'NavTitle', title: 'NavTitle', width: 160, },
                    ]],
                    columns: [
                        buttons
                    ],
                    onLoadSuccess: function (row, data) {
                        console.log("getData", data);
                    },
                    onClickRow: function (row) {
                        console.log(row.Buttons);
                        $(this).treegrid("beginEdit", row.Id);
                        var editors = $(this).treegrid('getEditors', row.Id);

                        var columns = $(this).treegrid("options").columns;
                        $.Enumerable.From(columns[0]).ToArray().forEach(function (i) {

                            var isExist = $.Enumerable.From(row.Buttons).Contains(i.field);
                            $.Enumerable.From(editors).ToArray().forEach(function (ii) {
                                if (!isExist && ii.field == i.field) {
                                    $(ii.target).remove();
                                }
                            });
                        });
                    },
                    toolbar: [{
                        text: '添加',
                        iconCls: 'icon-add',
                        handler: function () {
                            console.log(tgNavigations.treegrid("getData"));

                        }
                    }],
                };
                $("<div/>").attr("id", "tgNavigations").appendTo($(this)).treegrid(options).treegrid("unselectAll");
            });
            return;
            tgNavigations.treegrid({
                //title: 'Sys_Navigations',
                url: '/Sys_NavButtons/NavBtns',
                queryParams: {
                    RoldId: rows[0].Id,
                },
                idField: 'Id',
                treeField: 'NavTitle',
                rownumbers: true, //是否加行号
                iconCls: 'icon-save',
                dataType: "json",
                width: 1000,
                height: 500,
                fitColumns: true,
                fit: true,
                singleSelect: false,
                frozenColumns: [[
                    //{ field: "chk", checkbox: true },
                    { field: 'Id', title: 'Id', width: 70 },
                    { field: 'NavTitle', title: 'NavTitle', width: 160, },
                ]],
                columns: [
                    buttons
                ],
                onLoadSuccess: function (row, data) {
                    console.log("getData", data);
                },
                onClickRow: function (row) {
                    console.log(row.Buttons);
                    $(this).treegrid("beginEdit", row.Id);
                    var editors = $(this).treegrid('getEditors', row.Id);

                    var columns = $(this).treegrid("options").columns;
                    $.Enumerable.From(columns[0]).ToArray().forEach(function (i) {

                        var isExist = $.Enumerable.From(row.Buttons).Contains(i.field);
                        $.Enumerable.From(editors).ToArray().forEach(function (ii) {
                            if (!isExist && ii.field == i.field) {
                                $(ii.target).remove();
                            }
                        });
                    });
                },
                toolbar: [{
                    text: '添加',
                    iconCls: 'icon-add',
                    handler: function () {
                        console.log(tgNavigations.treegrid("getData"));

                    }
                }],
            }).treegrid("unselectAll");

            dlgRoleNavBtns.dialog({
                title: "分配权限",
                iconCls: 'icon-cog',
                width: 900,
                height: 550,
                modal: true,
                buttons: [{
                    iconCls: 'icon-ok',
                    text: 'Ok',
                    handler: function () {
                        for (var i in tgNavigations.treegrid('getSelections')) {
                            var obj = tgNavigations.treegrid('getSelections')[i];
                            tgNavigations.treegrid('endEdit', obj.Id);
                        }
                        var rows = tgNavigations.treegrid("getChanges");
                        console.log(rows);
                        var data = new Object();
                        data["Roles"] = JSON.stringify($dg.treegrid("getSelections"));
                        data["Navigations"] = JSON.stringify(rows);
                        console.log(data);
                        //return;
                        //更新数据库
                        $.ajax({
                            url: "/Sys_RoleNavBtns/RoleNavBtns",
                            type: "post",
                            data: data,
                            success: function (data, textStatus, jqXHR) {
                                console.log(data);
                                if (data.success) { }
                                $.messager.alert('提示', data.Message, 'info');

                                if (data.success) {
                                    tgNavigations.datagrid('acceptChanges');//此句是提交表单，如果不提交，getChanges方法会返回所有未提交的数据
                                    tgNavigations.datagrid("unselectAll");

                                    insertedRows = [];
                                    updatedRows = [];
                                    deletedRows = [];

                                }
                            },
                            error: function (jqXHR, textStatus, errorMsg) {
                                // jqXHR 是经过jQuery封装的XMLHttpRequest对象
                                // textStatus 可能为： null、"timeout"、"error"、"abort"或"parsererror"
                                // errorMsg 可能为： "Not Found"、"Internal Server Error"等
                                alert("请求失败：" + errorMsg);
                                insertedRows = [];
                                updatedRows = [];
                                deletedRows = [];
                            }
                        });
                        //dlgRoleNavBtns.dialog("close");
                    }
                }, {
                    iconCls: 'icon-cancel',
                    text: 'Cancel',
                    handler: function () {
                        dlgRoleNavBtns.dialog("close");
                    }
                }],
            });

        },//
        help: function ($dg) {
            top.$("ul.app-container li:contains('帮助')").dblclick();
        },//
    };

    $("#toolbar").find("#btn_Add").on("click", function () { toolbar.add(tgRoles); });
    $("#toolbar").find("#btn_Edit").on("click", function () { toolbar.edit(tgRoles); });
    $("#toolbar").find("#btn_Delete").on("click", function () { toolbar.delete(tgRoles); });
    $("#toolbar").find("#btn_Restore").on("click", function () { toolbar.restore(tgRoles); });
    $("#toolbar").find("#btn_Save").on("click", function () { toolbar.save(tgRoles); });
    $("#toolbar").find("#btn_Authority").on("click", function () { toolbar.authority(tgRoles); });
    $("#toolbar").find("#btn_Help").on("click", function () { toolbar.help(tgRoles); });
</script>
