@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmins.cshtml";
}
<script src="~/Scripts/jquery-easyui-1.4.1/treegrid-dnd/enableDnd.js"></script>
<div data-options="region:'center',title:''" style="padding:0px;background:#eee;">
    <table id="tgNavigations"></table>
</div>

<div id="dlgNavBtns" style="padding:5px">
    <div class="easyui-layout" style="overflow: hidden; " data-options="border:false,fit:true">
        <div style="width:200px;" data-options="region:'west',border:false">
            <table id="dgLeftButtons"></table>
        </div>
        <div style="width:50px;" data-options="region:'center',border:false">
            <div style=" width:30px;margin: auto;padding-top:100px;">
                @*<a id="btnUp" plain="true" icon="icon-arrow_up" class="easyui-linkbutton" title="向上移动"></a>
                    <a id="btnDown" plain="true" icon="icon-arrow_down" class="easyui-linkbutton" title="向下移动"></a>*@
                <a id="btnRight" plain="true" icon="icon-arrow_right" class="easyui-linkbutton" title="选中"></a>
                <a id="btnLeft" plain="true" icon="icon-arrow_left" class="easyui-linkbutton" title="移除"></a>
            </div>

        </div>
        <div style="width: 200px" data-options="border:false,region:'east'">
            <table id="dgRightButtons"></table>
        </div>
        <div data-options="border:false,region:'south'" style="height:30px; line-height:30px;color:#007ACC;padding-left:10px;font-weight:bold;">
            双击按钮即可添加或移除！
        </div>
    </div>
</div>

<div id="win">
</div>
<div id="winjs" class="easyui-window" title="代码生成" data-options="iconCls:'icon-save',closed:true" style="width:700px;height:600px;padding:5px;">
    <div class="easyui-layout" data-options="fit:true">
        <div data-options="region:'center'" style="padding:0px;">
            <textarea style="width: 99%; height: 98%; border: 0px; overflow-x: hidden; overflow-y: auto; " id="txtcode"></textarea>
        </div>
        <div data-options="region:'south',border:false" style="text-align:right;padding:5px 0 0; display:none">
            <a class="easyui-linkbutton" data-options="iconCls:'icon-ok'" href="javascript:void(0)" onclick="javascript:alert('ok')" style="width:80px">Ok</a>
            <a class="easyui-linkbutton" data-options="iconCls:'icon-cancel'" href="javascript:void(0)" onclick="javascript: $('#winjs').window('close')" style="width:80px">Close</a>
        </div>
    </div>
</div>

<!-- 工具栏 -->
<div id="toolbar" style="height:28px;">
    @Html.Raw(ViewBag.UserAuthority)
</div>

<script>

    $("body").bind("selectstart", function () {
        return false;
    });

    var insertedRows = new Array();
    var updatedRows = new Array();
    var deletedRows = new Array();

    var tgNavigations = $("#tgNavigations");

    //var buttons = $("#tgNavigations");
    tgNavigations.treegrid({
        title: 'Sys_Navigations',
        url: 'index',
        idField: 'Id',
        treeField: 'NavTitle',
        rownumbers: true, //是否加行号
        iconCls: 'icon-save',
        dataType: "json",
        border: 0,

        fitColumns: true,
        singleSelect: false,
        columns: [[
            //{ field: "chk", checkbox: true },
            { field: 'Id', title: 'Id', width: 70 },
            {
                field: 'NavTitle', title: 'NavTitle', width: 160, editor: {
                    type: 'validatebox', options: {
                        required: true, validType: ['length[2,50]']
                    }
                },

            },
            {
                field: 'LinkUrl', title: 'LinkUrl', width: 120, editor: {
                    type: 'validatebox', options: {
                        required: true
                    }
                }
            },
            { field: 'IconCls', title: 'IconCls', width: 120, editor: { type: 'validatebox' } },
            { field: 'IconUrl', title: 'IconUrl', width: 120, editor: { type: 'validatebox' } },
            {
                field: 'IsVisible', title: 'IsVisible', width: 120, editor: {
                    type: 'checkbox', options: {
                        on: true,
                        off: false
                    }
                }
            },
            { field: 'ParentId', title: 'ParentId', width: 120, hidden: true },
            { field: 'NavTag', title: 'NavTag', width: 120, editor: { type: 'text' } },
            { field: 'BigImageUrl', title: 'BigImageUrl', width: 120, editor: { type: 'text' } },
            { field: 'Remark', title: 'Remark', width: 120, editor: { type: 'text' } },
            {
                field: 'AddTime', title: 'AddTime', width: 150, formatter: function (value, row, index) {
                    if (value == "" || value == undefined)
                        return;
                    var date = value.substr(1, value.length - 2);
                    date = value.substr(1, value.length - 2);
                    date = eval('(new ' + date + ');');
                    return date.format("yyyy-MM-dd HH:mm:ss");
                }
            },
            {
                field: 'SortNum', title: 'SortNum', width: 70, editor: {
                    type: 'numberbox', options: {
                        required: true, min: 0, max: 999
                    }
                },
                align: "right"
            },

        ]],
        onLoadSuccess: function (row) {
            //$(this).treegrid('enableDnd', row ? row.id : null);
            enableDnd($(this));
        },
        onBeginEdit: function (rowIndex, rowData) {
            //console.log(rowIndex, rowData);
            var ed = $(this).treegrid('getEditor', { index: rowIndex, field: 'IconCls' });
            var edBigImageUrl = $(this).datagrid('getEditor', { index: rowIndex, field: 'BigImageUrl' });

            //$(ed.target).datebox('setValue', '5/4/2012');
            $(ed.target).off("click").on("click", function (e) {
                var options = {
                    title: "图标选取",
                    width: 786,
                    height: 600,
                    modal: true,
                    href: '/Icon/Icon16',
                    //closed: false,
                    iconCls: "icon-application_view_icons",
                    onLoad: function () {
                        //alert('loaded successfully');
                        top.$("#icon16list li").css({ float: "left", display: "inline-block", border: "1px solid #fff", "line-height": "20px", 'margin-right': "4px", width: "16px", cursor: "pointer" })
                            .hover(function () {
                                $(this).css({ 'border': '1px solid red' });
                            }, function () {
                                $(this).css({ 'border': '1px solid #fff' });
                            });
                        top.$("#icon16list li").off("click").on("click", function () {
                            $(ed.target).val($(this).find("span").attr("class").split(" ")[1]);
                            top.$('#win').window("close");
                        });
                    }

                };

                top.myWindow($("#win").clone(true), options);
            });
            $(edBigImageUrl.target).off("click").on("click", function (e) {

                var options = {
                    title: "图标选取",
                    width: 786,
                    height: 600,
                    modal: true,
                    href: '/Icon/Icon32',
                    //closed: false,
                    iconCls: "icon-application_view_icons",
                    onLoad: function () {
                        //alert('loaded successfully');
                        top.$("#icon32list li").css({ float: "left", display: "inline-block", border: "1px solid #fff", 'margin': "2px", width: "32px", cursor: "pointer" })
                            .hover(function () {
                                $(this).css({ 'border': '1px solid red' });
                            }, function () {
                                $(this).css({ 'border': '1px solid #fff' });
                            });

                        top.$("#icon32list li").off("click").on("click", function () {
                            $(edBigImageUrl.target).val($(this).find("img:first").attr("src"));
                            top.$('#win').window("close");
                        });
                    }
                };

                top.myWindow($("#win").clone(true), options);
            });
        },
        onBeforeEdit: function (row) {
            $(this).treegrid('disableDnd');
        }, onAfterEdit: function (row) {
            $(this).treegrid('enableDnd');
        },
        onCancelEdit: function (row) {
            $(this).treegrid('enableDnd');
        },
        onDblClickRow: function (row) {
            //$("#tg").treegrid("beginEdit", row.Id);
        },
        toolbar: "#toolbar"
    });



    //js
    var toolbar = {
        add: function ($dg) {
            //$("#edit,#delete").linkbutton("disable");
            var date = new Date();
            var newId = "ID" + date.format("yyyyMMddHHmmssll");
            var rows = $dg.treegrid("getSelections");
            if (rows.length == 0) {
                $dg.treegrid('append', { parent: 0, data: [{ Id: newId, NavTitle: "NavTitle", LinkUrl: "#", SortNum: 0 }] }).treegrid("beginEdit", newId);
            }
            else {
                for (var i in rows) {
                    newId = "ID" + Math.floor(Math.random() * 1000);
                    $dg.treegrid('append', { parent: rows[i].Id, data: [{ Id: newId, NavTitle: "NavTitle", SortNum: 0, ParentId: rows[i].Id }] }).treegrid("beginEdit", newId);
                }
            }


            //$("#tg").treegrid("beginEdit", 1);
        },//Remark
        edit: function ($dg) {
            //$("#add,#delete").linkbutton("disable");
            var rows = $dg.treegrid("getSelections");
            for (var i in rows) {
                $dg.treegrid("beginEdit", rows[i].Id);
            }
        },//
        delete: function ($dg) {
            //$("#add,#edit").linkbutton("disable");
            //console.log($("#dg").datagrid("getSelections"));
            var rows = $dg.treegrid("getSelections");
            var ids = new Array();
            for (var i in rows) {
                ids.push(rows[i].Id);
            }
            for (var i in ids) {
                deletedRows.push($dg.treegrid("pop", ids[i]));

            }
        },//
        save: function ($dg) {
            for (var i in $dg.treegrid('getSelections')) {
                var obj = $dg.treegrid('getSelections')[i];
                $dg.treegrid('endEdit', obj.Id);
            }

            var rows = $dg.treegrid('getChanges');
            var ids = new Array();
            for (var i in deletedRows) {
                ids.push(deletedRows[i].Id);
            }
            var data = new Object();
            var reg = new RegExp("^ID[0-9]*$");
            for (var i in rows) {
                if (reg.test(rows[i].Id)) {
                    //添加
                    rows[i].Id = 0;
                    insertedRows.push(rows[i]);
                }
                else {
                    //取修改的数据
                    console.log("inArray", $.inArray(rows[i].Id, ids), ids);
                    if (ids.length == 0 || $.inArray(rows[i].Id, ids) == -1) {
                        updatedRows.push(rows[i]);
                    }
                }
            }

            if (insertedRows.length) {
                data["insertedRows"] = JSON.stringify(insertedRows);
            }

            if (updatedRows.length) {
                data["updatedRows"] = JSON.stringify(updatedRows);
            }

            if (deletedRows.length) {
                data["deletedRows"] = JSON.stringify(deletedRows);
            }

            $dg.treegrid('acceptChanges');//此句是提交表单，如果不提交，getChanges方法会返回所有未提交的数据
            $dg.treegrid("unselectAll");

            console.log(data);

            if (rows.length > 0) {
                //更新数据库
                $.ajax({
                    url: "BacthSave",
                    type: "post",
                    data: data,
                    success: function (data, textStatus, jqXHR) {
                        console.log(data);
                        if (data.success) { }
                        $.messager.alert('提示', data.Message, 'info');

                        if (data.success) {
                            $dg.treegrid("reload");
                            insertedRows = [];
                            updatedRows = [];
                            deletedRows = [];
                        }
                    },
                    error: function (jqXHR, textStatus, errorMsg) {
                        // jqXHR 是经过jQuery封装的XMLHttpRequest对象
                        // textStatus 可能为： null、"timeout"、"error"、"abort"或"parsererror"
                        // errorMsg 可能为： "Not Found"、"Internal Server Error"等
                        alert("请求失败：" + errorMsg);
                        insertedRows = [];
                        updatedRows = [];
                        deletedRows = [];
                    }
                });
            }
        },//
        search: function ($dg) { },//Remark
        browser: function ($dg) { },//
        refresh: function ($dg) {
            tgNavigations.treegrid("reload");
        },//
        authority: function ($dg) {
            var rows = $dg.treegrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert('提示', '请选择一个导航栏目！', 'warning');
                return;
            }
            else if (rows.length > 1) {
                $.messager.alert('提示', '只许对单个导航进行分配按钮操作！', 'warning');
                return;
            }
            
            var dlgNavBtnsOptions = {
                title: "添加",
                iconCls: 'icon-cog',
                width: 500,
                height: 400,
                modal: true,
                //closed: false,
                buttons: [{
                    iconCls: 'icon-ok',
                    text: 'Ok',
                    handler: function () {
                        var navs = $dg.treegrid("getSelections");
                        var btns = dgRightButtons.datagrid("getData").rows;

                        var d = {};
                        //var d = new Object;
                        d["Navigations"] = JSON.stringify(navs);
                        d["Buttons"] = JSON.stringify(btns);
                        console.log(d);

                        $.ajax({
                            url: "/Sys_NavButtons/Save",
                            type: "post",
                            data: d,
                            success: function (data, textStatus, jqXHR) {
                                console.log(data);
                                if (data.success) { }
                                $.messager.alert('提示', data.Message, 'info');

                                if (data.success) {
                                    //$("#dg").datagrid("reload");
                                }
                            },
                            error: function (jqXHR, textStatus, errorMsg) {
                                // jqXHR 是经过jQuery封装的XMLHttpRequest对象
                                // textStatus 可能为： null、"timeout"、"error"、"abort"或"parsererror"
                                // errorMsg 可能为： "Not Found"、"Internal Server Error"等
                                alert("请求失败：" + errorMsg);
                            }
                        });
                        top.$("#dlgNavBtns").dialog("close");
                    }
                }, {
                    iconCls: 'icon-cancel',
                    text: 'Cancel',
                    handler: function () {
                        top.$("#dlgNavBtns").dialog("close");
                    }
                }],
            };

            top.myWindow($("#dlgNavBtns").clone(true), dlgNavBtnsOptions, function () {
                
                var dlgNavBtns = top.$("#dlgNavBtns");
                var dgLeftButtons = top.$('#dgLeftButtons');
                var dgRightButtons = top.$("#dgRightButtons");

                $.parser.parse(dlgNavBtns);
                $.parser.parse(dgLeftButtons);
                $.parser.parse(dgRightButtons);
                //$.parser.parse($(".easyui-layout"));
                //$.parser.parse($(".layout-panel-west"));
                //$.parser.parse($(".layout-panel-east"));
                //$.parser.parse($(".layout-panel-center"));
                //按钮
                var dgLeftButtonsOptions = {
                    url: '/Sys_Buttons/index',
                    method: 'post',
                    title: '全部按钮',
                    iconCls: 'icon-save',
                    dataType: "json",
                    rownumbers: true, //是否加行号
                    width: 200,
                    height: 300,
                    nowrap: false,
                    //fit: true,
                    fitColumns: true,
                    singleSelect: false,
                    columns: [[
                        { field: "chk", checkbox: true, hidden: true },
                        { field: 'Id', title: 'Id', width: 70, hidden: true },

                        {
                            field: 'IconCls', title: 'IconCls', width: 120, hidden: false, align: "center", formatter: function (value, row, index) {
                                return "<span class='icon " + value + "'>&nbsp;</span>"
                            }
                        },
                        { field: 'ButtonText', title: 'ButtonText', align: "center", width: 120 },
                        { field: 'IconUrl', title: 'IconUrl', width: 120, hidden: true, },
                        { field: 'ButtonTag', title: 'ButtonTag', width: 120, hidden: true, },
                        { field: 'ButtonHtml', title: 'ButtonHtml', width: 120, hidden: true, },
                        { field: 'Remark', title: 'Remark', width: 120, hidden: true, },
                        //{
                        //    field: 'AddTime', title: 'AddTime', width: 150, hidden: true, formatter: function (value, row, index) {
                        //        if (value == null) return;
                        //        var date = value.substr(1, value.length - 2);
                        //        date = value.substr(1, value.length - 2);
                        //        date = eval('(new ' + date + ');');
                        //        return date.format("yyyy-MM-dd HH:mm:ss");
                        //    }
                        //},
                        { field: 'SortNum', title: 'SortNum', width: 70, hidden: true, },

                    ]],
                    onDblClickRow: function (rowIndex, rowData) {

                        var rows = dgRightButtons.datagrid("getRows");
                        if (!$.Enumerable.From(rows).Select(function (i) { return i.ButtonText }).Contains(rowData.ButtonText)) {
                            dgRightButtons.datagrid("appendRow", rowData);
                        }

                    },
                };
                dgLeftButtons.datagrid(dgLeftButtonsOptions);
                
                top.$("#btnRight").on("click", function () {

                    GridRows.Add(dgLeftButtons, dgRightButtons);
                });

                top.$("#btnLeft").on("click", function () {
                    GridRows.Delete(dgRightButtons);
                });


                var GridRows = {
                    Add: function (form, to) {
                        var rows = form.datagrid("getSelections");
                        if (rows.length > 0) {
                            for (var i in rows) {
                                var r = to.datagrid("getData")
                                var lng = $.Enumerable.From(r).Where(function (x) { return x.Id == rows[i].Id; }).ToArray().length;
                                if (lng == 0) {
                                    to.datagrid("appendRow", rows[i]);
                                }
                            }

                        }
                    },
                    Delete: function (dg) {
                        var rows = dg.datagrid("getSelections");
                        for (var i in rows) {
                            var rowIndex = dg.datagrid("getRowIndex", rows[i]);
                            dg.datagrid("deleteRow", rowIndex);
                        }
                    }
                };

                
                var dgRightButtonsOptions = {
                    title: "已选按钮",
                    iconCls: 'icon-save',
                    url: '/Sys_NavButtons/NavButtons',
                    method: 'post',
                    queryParams: { NavId: rows[0].Id },
                    nowrap: false,
                    //fit: true,
                    fitColumns: true,
                    rownumbers: true, //是否加行号
                    width: 200,
                    height: 300,
                    idField: "Id",
                    columns: [[
                        {
                            field: 'IconCls', title: 'IconCls', width: 120, hidden: false, align: "center", formatter: function (value, row, index) {
                                return "<span class='icon " + value + "'>&nbsp;</span>"
                            }
                        },
                        { field: 'ButtonText', title: 'ButtonText', align: "center", width: 120 },
                    ]],
                    onLoadSuccess: function (data) {
                        console.log(data);
                    },
                    onDblClickRow: function (rowIndex, rowData) {
                        $(this).datagrid("deleteRow", rowIndex);
                    },
                };
                dgRightButtons.datagrid(dgRightButtonsOptions);


            });




        },//
        code: function ($dg) {
            var data = $dg.treegrid("getSelections")[0];
            //data = { aa: tgNavigations.treegrid("getSelections")[0] };
            data = {
                NavId: data.Id
            };
            $.ajax({
                url: "/Sys_Navigations/JsCode",
                type: "post",
                data: data,
                success: function (data, textStatus, jqXHR) {
                    $("#txtcode").val(data)
                    //$('#winjs').window("open");
                    setTimeout(function () {
                        var options = $.extend({}, $('#winjs').window("options"), { closed: false });
                        top.myWindow($('#winjs').clone(true, true), options);
                        $.parser.parse(top.$("#dgRightButtons"));
                        $.parser.parse(top.$("#dlgNavBtns"));
                    }, 100);
                },

            });
        },//目前是生成工具栏的js脚本
        help: function ($dg) {
            top.$("ul.app-container li:contains('帮助')").dblclick();
        },//
    };

    $("#toolbar").find("#btn_Add").on("click", function () { toolbar.add(tgNavigations); });
    $("#toolbar").find("#btn_Edit").on("click", function () { toolbar.edit(tgNavigations); });
    $("#toolbar").find("#btn_Delete").on("click", function () { toolbar.delete(tgNavigations); });
    $("#toolbar").find("#btn_Save").on("click", function () { toolbar.save(tgNavigations); });
    $("#toolbar").find("#btn_Search").on("click", function () { toolbar.search(tgNavigations); });
    $("#toolbar").find("#btn_Browser").on("click", function () { toolbar.browser(tgNavigations); });
    $("#toolbar").find("#btn_Refresh").on("click", function () { toolbar.refresh(tgNavigations); });
    $("#toolbar").find("#btn_Authority").on("click", function () { toolbar.authority(tgNavigations); });
    $("#toolbar").find("#btn_Code").on("click", function () { toolbar.code(tgNavigations); });
    $("#toolbar").find("#btn_Help").on("click", function () { toolbar.help(tgNavigations); });
</script>
